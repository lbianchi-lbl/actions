name: Release (test)

on:
  workflow_dispatch:

    inputs:

      project-id:
        description: Identifier for the project to release
        required: true
        type: choice
        options:
        - idaes
        - watertap
        - dispatches
        - ccsi-foqus
        - pareto

      release-tag:
        description: Version tag of the release
        type: string
        required: true

jobs:

  matrixer:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      strategy: ${{ steps.set-matrix.outputs.strategy }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./matrixer
        id: set-matrix
        with:
          data: |
            project-id: ${{ inputs.project-id }}
            ---
            !include data/projects/${{ inputs.project-id }}.yml
            ---
            release-tag: ${{ inputs.release-tag }}

  create-package:
    name: Create package (${{ matrix.project-id }} ${{ matrix.release-tag }})
    needs: [matrixer]
    strategy: ${{ fromJSON(needs.matrixer.outputs.strategy) }}
    uses: ./.github/workflows/create-package.yml
    with:
      release-tag: ${{ matrix.release-tag }}
      repository: ${{ matrix.repository }}
      pypi-name: ${{ matrix.pypi-name }}
      test-command: ${{ matrix.test-command }}
      test-after-build: false
    secrets:
      test-pypi-token: ${{ secrets.TEST_PYPI_TOKEN }}
      pypi-token: ${{ secrets.PYPI_TOKEN }}

  capture-env:
    if: false
    name: Capture env
    runs-on: ubuntu-latest
    needs: [matrixer]
    strategy: ${{ fromJSON(needs.matrixer.outputs.strategy) }}
    steps:
      - uses: lbianchi-lbl/actions/release/capture-env@main
        with:
          pypi-name: ${{ matrix.pypi-name }}
          pypi-version: ${{ matrix.release-tag }}
          python-version: '3.9'
          upload-artifact: ${{ matrix.pypi-name }}-${{ matrix.release-tag }}
