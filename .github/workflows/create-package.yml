name: Create package

on:

  workflow_call:
    inputs:

      repository:
        description: Full name (user/repo) of the repository to package
        type: string
        required: true

      release-tag:
        description: Version tag of the release
        type: string
        required: true

      pypi-name:
        description: Name of the Python package distribution as it appears on PyPI
        type: string
        required: true

      python-version:
        description: Python version to use
        required: false
        default: '3.9'
        type: string

      test-command:
        description: Command(s) to use to ensure successfull installation
        type: string
        required: true


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code to be packaged
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.release-tag }}

      - name: Set up Conda environment with Python
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ${{ format('build-{0}-{1}-env', inputs.pypi-name, inputs.release-tag) }}
          python-version: ${{ inputs.python-version }}

      - name: Install (noneditable mode)
        run: |
          pip install --no-cache-dir .

      - name: Check that the installed package has the expected tags
          pip show ${{ inputs.pypi-name }} | grep "${{ inputs.release-tag }}"

      - name: Run smoke tests
        run: |
          ${{ inputs.test-command }}

      - name: Generate dist files
        run: |
          python setup.py sdist bdist_wheel

      - name: Check that the dist directory's size is below PyPI's maximum
        run: |
          ls -lh dist/*
          _maxsize=100000  # 100 MB
          _dirsize=$(du -s dist/ | cut -f 1) ; echo $_dirsize
          [ "$_dirsize" -lt "$_maxsize" ]

      - name: Upload dist files as artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  upload-test:
   runs-on: ubuntu-latest
   needs: [build]
   steps:

     - uses: actions/download-artifact@v3
       with:
         name: dist

    #  - name: Upload dist files to the test PyPI

  # upload: